--- qtbase/src/corelib/thread/qthread_unix.cpp	Fri Sep 16 01:49:42 2016
+++ qtbase/src/corelib/thread/qthread_unix.cpp	Thu Jun  8 15:37:57 2017
@@ -238,17 +238,32 @@
 {
     QThreadData *data = get_thread_data();
     if (!data && createIfNecessary) {
-        data = new QThreadData;
-        QT_TRY {
+/** recovered from Qt4 for QtJambi5 **/
+        void *a;
+        if (QInternal::activateCallbacks(QInternal::AdoptCurrentThread, &a)) {
+            QThread *adopted = static_cast<QThread*>(a);
+            Q_ASSERT(adopted);
+            data = QThreadData::get2(adopted);
             set_thread_data(data);
-            data->thread = new QAdoptedThread(data);
-        } QT_CATCH(...) {
-            clear_thread_data();
+            adopted->d_func()->running = true;
+            adopted->d_func()->finished = false;
+            static_cast<QAdoptedThread *>(adopted)->init();
+        } else {
+/** end */
+            data = new QThreadData;
+            QT_TRY {
+                set_thread_data(data);
+                data->thread = new QAdoptedThread(data);
+            } QT_CATCH(...) {
+                clear_thread_data();
+                data->deref();
+                data = 0;
+                QT_RETHROW;
+            }
             data->deref();
-            data = 0;
-            QT_RETHROW;
+/** recovered from Qt4 for QtJambi5 **/
         }
-        data->deref();
+/** end */
         data->isAdopted = true;
         data->threadId = to_HANDLE(pthread_self());
         if (!QCoreApplicationPrivate::theMainThread)
